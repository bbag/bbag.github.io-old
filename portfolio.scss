//---------------------------------------------------------*/
//  USEFUL INFO                                            */
//---------------------------------------------------------*/

// 1px = 0.0625rem
// 2px = 0.125rem
// 3px = 0.1875rem
// 4px = 0.25rem
// 5px = 0.3125rem
// 6px = 0.375rem
// 7px = 0.4375rem
// 8px = 0.5rem
// 9px = 0.5625rem
// 10px = 0.625rem
// 11px = 0.6875rem
// 12px = 0.75rem
// 13px = 0.8125rem
// 14px = 0.875rem
// 15px = 0.9375rem
// 16px = 1rem

// cubic-bezier easing: all 400ms cubic-bezier(0.19, 1, 0.22, 1)

//---------------------------------------------------------*/
//  VARIABLES 'N STUFF                                     */
//---------------------------------------------------------*/

// Screen sizes: 576px, 768px, 992px, 1200px
$screen-sizes: (
    "sm": 36rem,
    "md": 48rem,
    "lg": 62rem,
    "xl": 86rem,
    "xxl": 110rem,
    "xxxl": 124rem
);

:root {
    --color-background: #F2F5FB;
    --color-primary: #CA2127;
    --color-primary-alt: #B31D22;
    --color-shadow: rgba(202, 33, 39, 0.25);
    // --color-primary: #519E44;
    // --color-primary-alt: #458C39;
    // --color-shadow: rgba(52, 88, 178, 0.25);
    --color-text: #212124;
}

// $column-count: 12;

// $padding-standard: 1rem;

$font-code: "Fira Code", sans-serif;
$font-heading: "Work Sans", "Roboto", sans-serif;
// $font-main: "Roboto", sans-serif;
$font-main: "Poppins", sans-serif;

$ease-cubic: cubic-bezier(0.8, 0, 0.2, 1);
$ease-out-cubic: cubic-bezier(0.19, 1, 0.22, 1);
$ease-in-cubic: cubic-bezier(0.78, 0, 0.81, 0);

@keyframes pop-in {
    from {
        opacity: 0;
        transform: translateY(4rem);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes slide-in-centered {
    from {
        transform: translate(-50%, 100%);
    }
    to {
        transform: translate(-50%, 0);
    }
}

@keyframes slide-out {
    from {
        transform: translateY(0);
    }
    to {
        transform: translateY(-100%);
    }
}

@keyframes icon-mouse-scroll {
    0% {
        transform: translateY(0);
    }
    100% {
        transform: translateY(0.25em);
    }
}

@function rem-to-px($input){
    @return $input / 1rem * 16 + "px";
}

//---------------------------------------------------------*/
//  VENDOR PREFIXES (transform, flexbox, user-select)      */
//---------------------------------------------------------*/

@mixin transform($transforms...) {
    -moz-transform: $transforms;
    -o-transform: $transforms;
    -ms-transform: $transforms;
    -webkit-transform: $transforms;
    transform: $transforms;
}

@mixin translate($x, $y) {
    @include transform(translate($x, $y));
}

@mixin transition($value...) {
    -webkit-transition: $value;
    transition: $value;
}

@mixin display-flex {
	display: -moz-box;
    display: -webkit-box;
	display: -ms-flexbox;
	display: -webkit-flex;
	display: flex;
}

@mixin display-inline-flex {
	display: -webkit-inline-flex;
    display: -webkit-inline-box;
	display: -moz-inline-flex;
	display: -ms-inline-flexbox;
	display: inline-flex;
}

@mixin justify-content($value: flex-start) {
	@if $value == flex-start {
		-webkit-box-pack: start;
        -moz-box-pack: start;
		-ms-flex-pack: start;
    }
	@else if $value == flex-end {
		-webkit-box-pack: end;
        -moz-box-pack: end;
		-ms-flex-pack: end;
    }
	@else if $value == space-between {
		-webkit-box-pack: justify;
        -moz-box-pack: justify;
		-ms-flex-pack: justify;
    }
	@else if $value == space-around {
		-ms-flex-pack: distribute;
    }
	@else {
		-webkit-box-pack: $value;
        -moz-box-pack: $value;
		-ms-flex-pack: $value;
    }
	-webkit-justify-content: $value;
	-moz-justify-content: $value;
	justify-content: $value;
}

@mixin align-items($value: stretch) {
	@if $value == flex-start {
		-webkit-box-align: start;
        -ms-flex-align: start;
    }
	@else if $value == flex-end {
		-webkit-box-align: end;
        -ms-flex-align: end;
    }
	@else {
		-webkit-box-align: $value;
        -ms-flex-align: $value;
    }
	-webkit-align-items: $value;
	-moz-align-items: $value;
	align-items: $value;
}

@mixin flex-direction($value: row) {
	@if $value == row-reverse {
		-webkit-box-direction: reverse;
		-webkit-box-orient: horizontal;
        -moz-box-direction: reverse;
        -moz-box-orient: horizontal;
    }
	@else if $value == column {
		-webkit-box-direction: normal;
		-webkit-box-orient: vertical;
        -moz-box-direction: normal;
        -moz-box-orient: vertical;
    }
	@else if $value == column-reverse {
		-webkit-box-direction: reverse;
		-webkit-box-orient: vertical;
        -moz-box-direction: reverse;
        -moz-box-orient: vertical;
    }
	@else {
		-webkit-box-direction: normal;
		-webkit-box-orient: horizontal;
        -moz-box-direction: normal;
        -moz-box-orient: horizontal;
    }
	-webkit-flex-direction: $value;
	-moz-flex-direction: $value;
	-ms-flex-direction: $value;
	flex-direction: $value;
}

@mixin flex-wrap($value: nowrap) {
	-webkit-flex-wrap: $value;
	-moz-flex-wrap: $value;
	@if $value == nowrap {
        -ms-flex-wrap: none;
    }
	@else {
        -ms-flex-wrap: $value;
    }
	flex-wrap: $value;
}

@mixin order($value) {
    -webkit-box-ordinal-group: $value;
    -moz-box-ordinal-group: $value;
    -ms-flex-order: $value;
    -webkit-order: $value;
    order: $value;
}

@mixin flex($values) {
    -webkit-box-flex: $values;
    -moz-box-flex: $values;
    -webkit-flex: $values;
    -ms-flex: $values;
    flex: $values;
}

@mixin user-select($value) {
    -webkit-user-select: $value;
    -moz-user-select: $value;
    -ms-user-select: $value;
    user-select: $value;
}

/*---------------------------------------------------------*/
/*  REBOOT.CSS                                             */
/*---------------------------------------------------------*/

*,
*::before,
*::after {
    box-sizing: border-box;
}

html {
    font-family: $font-main;
    line-height: 1.15;
    -webkit-text-size-adjust: 100%;
    -ms-text-size-adjust: 100%;
    -ms-overflow-style: scrollbar;
    -webkit-tap-highlight-color: rgba(0,0,0,0);
}

body {
    margin: 0;
    text-align: left;
}

@-ms-viewport {
    width: device-width;
}

article, aside, dialog, figcaption, figure, footer, header, hgroup, main, nav, section {
    display: block;
}

[tabindex="-1"]:focus {
    outline: none !important;
}

hr {
    box-sizing: content-box;
    height: 0;
    overflow: visible;
}

h1, h2, h3, h4, h5, h6 {
    margin-top: 0;
    margin-bottom: 0.5rem;
}

p {
    margin-top: 0;
}

abbr[title],
abbr[data-original-title] {
    border-bottom: 0;
    cursor: help;
    text-decoration: underline;
    text-decoration: underline dotted;
}

address {
    font-style: normal;
    line-height: inherit;
    margin-bottom: 1rem;
}

ol,
ul,
dl {
    margin-top: 0;
    margin-bottom: 1rem;
}

ol ol,
ul ul,
ol ul,
ul ol {
    margin-bottom: 0;
}

dd {
    margin-bottom: 0.5rem;
    margin-left: 0;
}

blockquote {
    margin: 0 0 1rem;
}

dfn {
    font-style: italic;
}

b, strong {
    font-weight: bolder;
}

small {
    font-size: 80%;
}

sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
}

sub {
    bottom: -0.25em;
}

sup {
    top: -0.5em;
}

a {
    background-color: transparent;
    -webkit-text-decoration-skip: objects;
}

a:not([href]):not([tabindex]) {
    color: inherit;
    text-decoration: none;

    &:focus {
        outline: 0;
    }
}

pre, code, kbd, samp {
    font-family: monospace, monospace;
    font-size: 1em;
}

pre {
    margin-top: 0;
    margin-bottom: 1rem;
    overflow: auto;
}

figure {
    margin: 0 0 1rem;
}

img {
    border-style: none;
    height: auto;
    max-width: 100%;
    vertical-align: middle;
}

svg:not(:root) {
    overflow: hidden;
}

a, area, button, [role="button"], input, label, select, summary, textarea {
    touch-action: manipulation;
}

table {
    border-collapse: collapse;
}

caption {
    caption-side: bottom;
    text-align: left;
}

th {
    text-align: inherit;
}

label {
    display: inline-block;
    margin-bottom: 0.5rem;
}

button:focus {
    outline: 1px dotted;
    outline: 5px auto -webkit-focus-ring-color;
}

input, button, select, optgroup, textarea {
    font-family: inherit;
    font-size: inherit;
    line-height: inherit;
    margin: 0;
}

button,
input {
    overflow: visible;
}

button, select {
    text-transform: none;
}

button,
html [type="button"],
[type="reset"],
[type="submit"] {
    -webkit-appearance: button;
}

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
    border-style: none;
    padding: 0;
}

input[type="radio"],
input[type="checkbox"] {
    box-sizing: border-box;
    padding: 0;
}

input[type="date"],
input[type="time"],
input[type="datetime-local"],
input[type="month"] {
    -webkit-appearance: listbox;
}

textarea {
    overflow: auto;
    resize: vertical;
}

fieldset {
    border: 0;
    margin: 0;
    min-width: 0;
    padding: 0;
}

legend {
    color: inherit;
    display: block;
    font-size: 1.5rem;
    line-height: inherit;
    margin-bottom: 0.5rem;
    max-width: 100%;
    padding: 0;
    white-space: normal;
    width: 100%;
}

progress {
    vertical-align: baseline;
}

[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
    height: auto;
}

[type="search"] {
    outline-offset: -2px;
    -webkit-appearance: none;
}

[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
    -webkit-appearance: none;
}

::-webkit-file-upload-button {
    font: inherit;
    -webkit-appearance: button;
}

output {
    display: inline-block;
}

summary {
    display: list-item;
}

template {
    display: none;
}

[hidden] {
    display: none !important;
}

/*---------------------------------------------------------*/
/*  CUSTOM STYLES                                          */
/*---------------------------------------------------------*/

html {
    background: var(--color-background);
    color: #222325;
}

body {
    font-family: $font-main;
    // font-weight: 300;
}

p {
    line-height: 1.5;
}

strong {
    font-weight: 700;
}

hr {
    background: rgba(0, 0, 0, 0.15);
    border: 0;
    border-radius: 1em;
    height: 0.1875rem;
    max-width: 18rem;
    outline: none;
}

.content-container {
    // @include align-items(center);
    // @include display-flex();
    // @include flex(1 0 auto);
    display: grid;
    max-width: 72rem;
}

// Buttons
.button {
    @include align-items(center);
    background: var(--color-primary);
    border: 0.125rem solid var(--color-primary);
    border-radius: 0.375rem;
    color: #FFF;
    cursor: pointer;
    display: inline-block;
    @include display-inline-flex();
    min-height: 3.25em;
    padding: 0.675em 1em;
    position: relative;
    text-align: center;
    text-decoration: none;
    transition: all 200ms ease;
    user-select: none;
    white-space: nowrap;

    &:hover,
    &:focus {
        background-color: var(--color-primary-alt);
        border-color: var(--color-primary-alt);
        color: #FFF;
        outline: none;
    }

    & svg {
        fill: none;
        margin-right: 0.75em;
        stroke: currentColor;
        stroke-width: 2;
        stroke-linecap: round;
        stroke-linejoin: round;
        width: 1.5em;
    }

    &.button-small {
        font-size: 0.875em;
        min-height: 1em;
        padding: 0.5rem 0.75rem;
    }
}

.button-secondary {
    background: rgba(210, 38, 48, 0);
    color: var(--color-primary);

    &:hover,
    &:focus {
        background: rgba(210, 38, 48, 0.08);
        color: var(--color-primary-alt);
        outline: none;
    }
}

.button.step-button {
    background: rgba(210, 38, 48, 0);
    border: 0;
    color: var(--color-primary);
    min-height: auto;
    padding: 0.75rem;

    &:hover {
        background: rgba(0, 0, 0, 0.06);
    }

    &.disabled {
        color: var(--color-text);
        cursor: default;
        opacity: 0.4;

        &:hover {
            background: rgba(0, 0, 0, 0);
        }
    }

    & svg {
        fill: none;
        margin: 0;
        stroke: currentColor;
        stroke-width: 3;
        stroke-linecap: round;
        stroke-linejoin: round;
        width: 1.5rem;
    }

    &:last-of-type svg {
        margin: 0;
    }
}

// Animation timings
.hero__name,
.hero__title,
.hero__intro,
.terminal,
.hero__buttons > *,
.hero__thumbnails,
.thumbnail-controls {
    animation: pop-in 1.8s $ease-out-cubic both;
}

.hero-bottom-divider {
    animation: slide-in-centered 1.8s $ease-out-cubic both;
}

.thumbnail-reveal-1 {
    animation: slide-out 800ms $ease-cubic both;
    animation-delay: 1s;

    & span {
        animation: pop-in 1.8ms $ease-cubic both;
        animation-delay: 100ms;
    }
}

// Hero
.hero {
    align-items: center;
    background-attachment: fixed;
    background-image: url("img/dots-background.svg");
    background-position: center center;
    background-repeat: no-repeat;
    background-size: cover;
    display: grid;
    font-size: 0.875rem;
    justify-items: center;
    min-height: 100vh;
    overflow: hidden;
    position: relative;
}

#heroBackground {
    height: 100%;
    left: 0;
    position: absolute;
    top: 0;
    width: 100%;
    z-index: 0;
}

.hero-content {
    align-items: center;
    display: grid;
    gap: 3rem;
    grid-template-areas:
        "hero-left"
        "hero-right";
    grid-template-columns: 1fr;
    justify-items: center;
    max-width: 72rem;
    padding: 1rem;

    &--left {
        grid-area: hero-left;
    }
    &--right {
        grid-area: hero-right;
    }
}

.hero__name,
.hero__title,
.hero__intro,
.hero__intro__highlight {
    transition: all 200ms ease;
}

.hero__name {
    font-family: $font-heading;
    font-size: 3rem;
    font-weight: normal;
    line-height: 1;
}

.hero__title {
    animation-delay: 75ms;
    color: var(--color-primary);
    margin: 0 0 2.5rem;

    & span {
        opacity: 0.6;
    }
}

.hero__intro {
    animation-delay: 150ms;
    font-size: 1.25em;
}

.hero__intro__highlight {
    color: var(--color-primary);
}

// CSS Terminal
.terminal {
    animation-delay: 225ms;
    background: #282C34;
    border-radius: 0.375rem;
    color: #ABB2BF;
    font-family: $font-code;
    font-size: 0.875em;
    line-height: 1.4;
    padding: 1.5rem;
    position: relative;
    margin: 3rem 0;
    max-width: 100%;
    overflow: hidden;
    white-space: pre-wrap;

    &::after {
        color: #FFF;
        content: "CSS";
        font-size: 0.75em;
        opacity: 0.4;
        position: absolute;
        right: 0.75em;
        top: 0.75em;
    }

    &--line {
        padding-left: 2.5em;
        text-indent: -1.25em;
    }

    &--selector {
        color: #61AFEF;
    }

    &--property {
        color: #E06C75;
    }

    &--value {
        color: #98C379;
    }
}

// Thumbnail previews
.hero__thumbnails {
    animation-delay: 300ms;
    background: #000;
    border: solid 0.125rem #FFF;
    border-radius: 0.375rem;
    box-shadow: 0 0.5rem 1.75rem var(--color-shadow);
    max-width: 28rem;
    overflow: hidden;
    position: relative;
    transition: box-shadow 400ms ease;
}

.thumbnail {
    display: block;
    left: 0;
    opacity: 0.4;
    position: absolute;
    top: 0;
    transition: transform 400ms ease, opacity 400ms ease;
    width: 100%;
    z-index: 1;

    &--sizer {
        opacity: 0;
        pointer-events: none;
        z-index: 0;
    }

    &--active {
        opacity: 1;
        transition: transform 400ms $ease-out-cubic;
        z-index: 2;
    }

    &--left {
        transform: translateX(-100%);
    }

    &--right {
        transform: translateX(100%);
    }
}

.thumbnail-info-container {
    align-items: flex-end;
    background: rgba(0, 0, 0, 0.4);
    background: linear-gradient(to bottom, rgba(0, 0, 0, 0) 0%,rgba(0, 0, 0, 0.8) 100%);
    bottom: 0;
    color: #FFF;
    display: flex;
    justify-content: space-between;
    left: 0;
    min-height: 33%;
    padding: 1em;
    position: absolute;
    transform: translateY(100%);
    transition: transform 500ms $ease-cubic;
    width: 100%;
    z-index: 3;

    & > * {
        opacity: 0;
        transform: translateY(100%);
        transition: all 500ms $ease-cubic;
    }

    .hero__thumbnails:hover & {
        transform: translateY(0);

        & > * {
            opacity: 1;
            transform: translateY(0);

            &:nth-child(1) {
                transition-delay: 125ms;
            }

            &:nth-child(2) {
                transition-delay: 200ms;
            }
        }
    }
}

.thumbnail-reveal-1 {
    align-items: center;
    background: #FFF;
    display: flex;
    height: 100%;
    justify-content: center;
    left: 0;
    position: absolute;
    top: 0;
    width: 100%;
    z-index: 4;

    & span {
        color: var(--color-primary);
        font-weight: bold;
        font-size: 2em;
    }
}

.thumbnail-controls {
    animation-delay: 475ms;
    margin-top: 2rem;

    & > * {
        @include transition(all 200ms ease);
    }
}

.thumbnail-controls,
#dots {
    @include align-items(center);
    @include display-flex();
    @include flex-wrap(nowrap);
    @include justify-content(center);
}

#dots {
    margin: 0 1rem;
    width: 8rem;
}

.dot {
    background: var(--color-primary);
    border-radius: 1rem;
    border: 0;
    content: '';
    display: block;
    height: 0.5rem;
    margin: 0.25rem;
    opacity: 0.4;
    outline: 0;
    @include transition(all 400ms $ease-out-cubic);
    width: 0.5rem;

    &.dot--active {
        opacity: 1;
        width: 2.5rem;
    }
}

// Hero buttons
.hero__buttons {
    @include align-items(center);
    @include display-flex();

    & > *:not(:last-child) {
        margin-right: 1rem;
    }

    & > *:nth-child(1) {
        animation-delay: 525ms;
    }

    & > *:nth-child(2) {
        animation-delay: 575ms;
    }

    & > *:nth-child(3) {
        animation-delay: 625ms;
    }
}

// Hero divider
.hero-bottom-divider {
    animation-delay: 1s;
    bottom: 0;
    left: 50%;
    position: absolute;
    width: 30rem;

    & path {
        fill: #FFF;
    }

    & line,
    & rect {
        stroke: var(--color-primary);
        stroke-width: 3;
        stroke-linecap: round;
        stroke-linejoin: round;
        transition: all 200ms ease;
    }

    & line {
        animation: icon-mouse-scroll 0.5s $ease-cubic alternate infinite;
        animation-iteration-count: 10;
    }

    &:hover line {
        animation-iteration-count: infinite;
    }

    & rect {
        cursor: pointer;
        fill: #FFF;
    }
}

// Work samples
.work {
    background: #FFF;
    padding: 6rem 1rem;
}

.work-intro {
    margin-bottom: 4rem;
    text-align: center;

    & h2 {
        color: var(--color-primary);
        font-size: 2.5em;
    }

    & p {
        font-size: 1.25em;
    }
}

.work-content {
    // justify-content: center;
    // display: grid;
    
}

.work-item {
    align-items: center;
    display: grid;
    gap: 3rem;
    grid-template-areas:
        "work-thumbnail"
        "work-info";
    grid-template-columns: 1fr;
    justify-items: center;
    margin: 0 auto;
    max-width: 72rem;
    padding: 1rem;
    transition: all 300ms ease-in-out;
}

.work-thumbnail {
    border-radius: 0.375rem;
    box-shadow: 0 0.5rem 1.75rem rgba(0, 0, 0, 0.15);
    grid-area: work-thumbnail;
    max-width: 22rem;
    transition: all 400ms $ease-out-cubic;
    width: 100%;
}

.work-info {
    grid-area: work-info;
    width: 100%;
}

.work-info-title {
    font-size: 1.625em;
}

.work-icons {
    align-items: center;
    display: flex;
    flex-wrap: wrap;
    margin: 2em 0 0;

    & img {
        margin-bottom: 1em;
        width: 2.5em;

        &:not(:last-child) {
            margin-right: 1em;
        }
    }
}

.work-buttons {
    align-items: center;
    display: flex;
    flex-wrap: wrap;

    & .button:not(:last-child) {
        margin-right: 1em;
    }
}

// Footer
footer {
    background: var(--color-primary);
    color: #FFF;

    & > *:last-child {
        margin-bottom: 0;
    }
}

/*---------------------------------------------------------*/
/*  MEDIA QUERIES                                          */
/*---------------------------------------------------------*/

/* #{rem-to-px(map-get($screen-sizes, "sm"))} */
@media screen and (min-width: map-get($screen-sizes, "sm")) {
    .hero-content,
    .work-item {
        gap: 2rem;
        grid-template-columns: 1fr;
        justify-items: center;
        max-width: 72rem;
        padding: 2rem;
    }

    .hero-content {
        grid-template-areas:
            "hero-left"
            "hero-right";
    }

    .terminal {
        font-size: 0.9375em;
    }

    .work-item {
        align-items: start;
        grid-template-areas:
            "work-thumbnail"
            "work-info";
    }
}

/* #{rem-to-px(map-get($screen-sizes, "lg"))} */
@media screen and (min-width: map-get($screen-sizes, "lg")) {
    .hero {
        // color: orange;
    }
    
    .hero-content,
    .work-item {
        gap: 2rem;
        max-width: 72rem;
    }

    .hero-content {
        grid-template-areas: "hero-left hero-right";
        grid-template-columns: minmax(0, 1fr) 24rem;
    }

    .terminal {
        font-size: 1em;
    }

    .hero__thumbnails {
        max-width: 100%;
    }

    .work-item {
        // filter: grayscale(1);
        grid-template-areas: "work-thumbnail work-info";
        grid-template-columns: 14rem minmax(0, 1fr);
        // opacity: 0.75;

        &:hover {
            // filter: grayscale(0);
            // opacity: 1;
        }
    }

    .work-thumbnail {
        max-width: 100%;

        &:hover {
            transform: scale(1.05);
        }
    }
}

/* #{rem-to-px(map-get($screen-sizes, "xl"))} */
@media screen and (min-width: map-get($screen-sizes, "xl")) {
    .hero {
        // color: green;
        font-size: 0.875rem;
    }

    .hero-content,
    .work-item {
        gap: 5rem;
        max-width: 78rem;
    }
    
    .hero-content {
        grid-template-columns: minmax(0, 1fr) 28rem;
    }

    .work-item {
        grid-template-columns: 17rem minmax(0, 1fr);
    }
}

/* #{rem-to-px(map-get($screen-sizes, "xxl"))} */
@media screen and (min-width: map-get($screen-sizes, "xxl")) {
    .hero {
        // color: blue;
        font-size: 1rem;
    }
    
    .hero-content,
    .work-item {
        gap: 6rem;
        max-width: 86rem;
    }

    .hero-content {
        grid-template-columns: minmax(0, 1fr) 34rem;
    }

    .work-item {
        grid-template-columns: 20rem minmax(0, 1fr);
    }
}

/* #{rem-to-px(map-get($screen-sizes, "xxxl"))} */
@media screen and (min-width: map-get($screen-sizes, "xxxl")) {
    .hero {
        // color: red;
        font-size: 1.25rem;
    }

    .hero-content,
    .work-item {
        gap: 8rem;
        max-width: 100rem;
    }

    .hero-content {
        grid-template-columns: minmax(0, 1fr) 38rem;
    }

    .hero__intro {
        font-size: 1.375em;
    }

    .work-item {
        grid-template-columns: 25rem minmax(0, 1fr);
    }
}